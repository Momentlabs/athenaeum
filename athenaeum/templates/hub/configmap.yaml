kind: ConfigMap
apiVersion: v1
metadata:
  name: hub-configmap
  labels:
    app: athenaeum

# {{- /* }}
# What's going on here?
# In an effort to keep down the direct transalation from .Values to configmap entries,
# the default .Values file is copied in with a toYaml for as many sections as possible.
# There are certian sections that require other computed values provide through helpers.
# In this case, those sections are indeed handle 'by hand'.
# the full line looks like {{ toYaml .Values.subsection | trim | nindent n }} 
# with trim handling the known extra line generated by toYaml and the nindent adding a newline
# up and then inenting all entries as appopriate.
#
# TODO: 
#     really consider generating the entire jupyterhub_config.py file as a template to be 
#     included here e.g.
#     
#     data:
#       config: |- {{ include "jupyterhub_config_py" . }}
#
#     with some file, say '_jupyterhub_config_py.tpl' containing the complete config.py 
#     with all of the appropriate mappings between tmeplates and .Values entries direcly into 
#     the configuration file, the final result being generated at helm create/upgrade time.
#
#     Note: this would take the jupyterhub_config.py file out of the Docker file, which 
#     would be a good thing from a deveopment perspective. It's Certainly more DRY.
#     And, finally, it gets the configuration file out of the business of running
#     code, to get at the 'dynamic' configuration that we're doing here.
#
# {{ */}}
data:
  config: |-
    hub:
      debug: {{ .Values.hub.debug }}
      uid: {{ .Values.hub.uid }}
      fs_gid: {{ .Values.hub.fs_gid }}
      image: {{ toYaml .Values.hub.image | trim | nindent 8 }}
      bind_url: {{ include "athenaeum.hub.bind_url" . }}
      service:
        name: {{ include "athenaeum.hub.service.name" . }}
        type: {{ .Values.hub.service.type }}
        port: {{ .Values.hub.service.port }}
        targetPort: {{ .Values.hub.service.targetPort}}
      db: {{ toYaml .Values.hub.db | trim | nindent 8 }}
      auth:
        type: {{ .Values.hub.auth.type }}
        dummy: {{ toYaml .Values.hub.auth.dummy | trim | nindent 10 }}
        auth0:
          subdomain: {{ .Values.hub.auth.auth0.subdomain }}
          authenticator_class: {{ .Values.hub.auth.auth0.authenticator_class }}
          client_id: {{ .Values.hub.auth.auth0.client_id }}
          client_secret: {{ .Values.hub.auth.auth0.client_secret }}
          oauth_callback_url: {{ include "athenaeum.hub.auth.auth0.oauth_callback_url" . }}
          client_redirect_base_url: {{ include "athenaeum.hub.auth.auth0.client_redirect_base_url" . }}
      spawner: {{ toYaml .Values.hub.spawner | trim | nindent 8 }}
    proxy:
      hub_should_start: {{ .Values.proxy.hub_should_start }}
      hostname: {{ .Values.proxyhostname }}
      image: {{ toYaml .Values.proxy.image | trim | nindent 8 }}
      service:
        name: {{ include "athenaeum.proxy.service.name" . }}
        type: {{ .Values.proxy.service.type }}
      api:
        service:
            name: {{ include "athenaeum.proxy.api.service.name" . }}
            type: {{ .Values.proxy.api.service.type }}
            port: {{ .Values.proxy.api.service.port }}
            targetPort: {{ .Values.proxy.api.service.targetPort }}
      ingress: {{ toYaml .Values.proxy.ingress | trim | nindent 8 }}
    cull: {{ toYaml .Values.cull | trim | nindent 6}}
